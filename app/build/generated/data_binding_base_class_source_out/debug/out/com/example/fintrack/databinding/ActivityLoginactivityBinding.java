// Generated by view binder compiler. Do not edit!
package com.example.fintrack.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fintrack.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginactivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnsingup;

  @NonNull
  public final TextView btnsingupfront;

  @NonNull
  public final TextInputEditText edEmail;

  @NonNull
  public final TextInputEditText etpassword;

  @NonNull
  public final TextView forgotpassword;

  @NonNull
  public final Button login;

  private ActivityLoginactivityBinding(@NonNull LinearLayout rootView, @NonNull TextView btnsingup,
      @NonNull TextView btnsingupfront, @NonNull TextInputEditText edEmail,
      @NonNull TextInputEditText etpassword, @NonNull TextView forgotpassword,
      @NonNull Button login) {
    this.rootView = rootView;
    this.btnsingup = btnsingup;
    this.btnsingupfront = btnsingupfront;
    this.edEmail = edEmail;
    this.etpassword = etpassword;
    this.forgotpassword = forgotpassword;
    this.login = login;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginactivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginactivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_loginactivity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginactivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnsingup;
      TextView btnsingup = ViewBindings.findChildViewById(rootView, id);
      if (btnsingup == null) {
        break missingId;
      }

      id = R.id.btnsingupfront;
      TextView btnsingupfront = ViewBindings.findChildViewById(rootView, id);
      if (btnsingupfront == null) {
        break missingId;
      }

      id = R.id.edEmail;
      TextInputEditText edEmail = ViewBindings.findChildViewById(rootView, id);
      if (edEmail == null) {
        break missingId;
      }

      id = R.id.etpassword;
      TextInputEditText etpassword = ViewBindings.findChildViewById(rootView, id);
      if (etpassword == null) {
        break missingId;
      }

      id = R.id.forgotpassword;
      TextView forgotpassword = ViewBindings.findChildViewById(rootView, id);
      if (forgotpassword == null) {
        break missingId;
      }

      id = R.id.login;
      Button login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      return new ActivityLoginactivityBinding((LinearLayout) rootView, btnsingup, btnsingupfront,
          edEmail, etpassword, forgotpassword, login);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
