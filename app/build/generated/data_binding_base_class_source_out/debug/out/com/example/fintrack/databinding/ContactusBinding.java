// Generated by view binder compiler. Do not edit!
package com.example.fintrack.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fintrack.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContactusBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView Contact;

  @NonNull
  public final Button bSubmit;

  @NonNull
  public final ImageView back;

  @NonNull
  public final EditText email;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final EditText message;

  @NonNull
  public final EditText name;

  private ContactusBinding(@NonNull RelativeLayout rootView, @NonNull TextView Contact,
      @NonNull Button bSubmit, @NonNull ImageView back, @NonNull EditText email,
      @NonNull ImageView imageView, @NonNull EditText message, @NonNull EditText name) {
    this.rootView = rootView;
    this.Contact = Contact;
    this.bSubmit = bSubmit;
    this.back = back;
    this.email = email;
    this.imageView = imageView;
    this.message = message;
    this.name = name;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContactusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContactusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.contactus, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContactusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Contact;
      TextView Contact = ViewBindings.findChildViewById(rootView, id);
      if (Contact == null) {
        break missingId;
      }

      id = R.id.bSubmit;
      Button bSubmit = ViewBindings.findChildViewById(rootView, id);
      if (bSubmit == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.message;
      EditText message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      return new ContactusBinding((RelativeLayout) rootView, Contact, bSubmit, back, email,
          imageView, message, name);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
